{"version":3,"sources":["components/with-spinner/with-spinner.component.jsx","pages/collection/collection.comp.jsx","pages/collection/collection.container.jsx","redux/shop/shop.selectors.js","components/collection-item/collection-item.component.jsx"],"names":["WithSpinner","WrappedComponent","isLoading","otherProps","connect","state","ownProps","collection","selectCollection","match","params","collectionId","title","items","className","map","item","key","id","mapStateToProps","createStructuredSelector","selectIsCollectionsLoaded","CollectionPageContainer","compose","CollectionPage","selectShop","shop","selectShopCollections","createSelector","collections","selectShopCollectionsForPreview","Object","keys","collectionUrlParam","isFetching","dispatch","addItem","imageUrl","price","name","style","backgroundImage","onClick","inverted"],"mappings":"kLAUeA,IAPK,SAAAC,GAAgB,OAAI,gBAAEC,EAAF,EAAEA,UAAcC,EAAhB,oCACpCD,EACI,kBAAC,IAAD,MAEA,kBAACD,EAAqBE,M,0HCmBfC,G,OAAAA,aAJS,SAACC,EAAOC,GAAR,MAAsB,CAC1CC,WAAYC,YAAiBF,EAASG,MAAMC,OAAOC,aAAvCH,CAAqDH,MAGtDD,EAlBQ,SAAC,GAAkB,IAAjBG,EAAgB,EAAhBA,WACdK,EAAgBL,EAAhBK,MAAOC,EAASN,EAATM,MACd,OACA,yBAAKC,UAAU,mBACX,wBAAIA,UAAU,SAASF,GACvB,yBAAKE,UAAU,SAEPD,EAAME,KAAI,SAAAC,GAAI,OAAI,kBAAC,IAAD,CAAgBC,IAAKD,EAAKE,GAAIF,KAAMA,a,SCPhEG,EAAkBC,YAAyB,CAC7ClB,UAAW,SAAAG,GAAK,OAAKgB,YAA0BhB,MAG7CiB,EAA0BC,YAC5BnB,YAAQe,GACRnB,IAF4BuB,CAG9BC,GAGaF,a,gCClBf,kHAEMG,EAAa,SAAApB,GAAK,OAAIA,EAAMqB,MAErBC,EAAwBC,YACjC,CAACH,IACD,SAAAC,GAAI,OAAIA,EAAKG,eAGJC,EAAkCF,YAC3C,CAACD,IACD,SAAAE,GAAW,OAAIA,EAAcE,OAAOC,KAAKH,GAAad,KAAI,SAAAE,GAAG,OAAIY,EAAYZ,MAAO,MAG3ET,EAAmB,SAAAyB,GAAkB,OAAIL,YAClD,CAACD,IACD,SAAAE,GAAW,OAAIA,EAAcA,EAAYI,GAAsB,SAQtDZ,GALmBO,YAC5B,CAACH,IACD,SAAAC,GAAI,OAAIA,EAAKQ,cAGwBN,YACrC,CAACH,IACD,SAAAC,GAAI,QAAMA,EAAKG,iB,gCC1BnB,mDAyBezB,gBAAQ,MAJI,SAAA+B,GAAQ,MAAK,CACpCC,QAAS,SAAApB,GAAI,OAAImB,EAASC,YAAQpB,QAGvBZ,EAnBQ,SAAC,GAAqB,IAApBY,EAAmB,EAAnBA,KAAMoB,EAAa,EAAbA,QACpBC,EAAyBrB,EAAzBqB,SAAUC,EAAetB,EAAfsB,MAAOC,EAAQvB,EAARuB,KACxB,OAEI,yBAAKzB,UAAU,mBACX,yBAAK0B,MAAO,CAACC,gBAAgB,OAAD,OAAQJ,EAAR,MAAsBvB,UAAU,UAC5D,yBAAKA,UAAU,qBACX,0BAAMA,UAAU,QAAQyB,GACxB,0BAAMzB,UAAU,SAAhB,IAA0BwB,IAE9B,kBAAC,IAAD,CAAcI,QAAS,kBAAMN,EAAQpB,IAAO2B,UAAQ,GAApD","file":"static/js/6.5d1849a8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Spinner from \"../spinner/spinner.component\";\r\n\r\nconst WithSpinner = WrappedComponent => ({isLoading, ...otherProps}) => (\r\n    isLoading ?\r\n        <Spinner/>\r\n        :\r\n        <WrappedComponent {...otherProps}/>\r\n);\r\n\r\nexport default WithSpinner;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {selectCollection} from \"../../redux/shop/shop.selectors\";\r\nimport CollectionItem from \"../../components/collection-item/collection-item.component\";\r\n\r\nimport './collection.styles.scss';\r\n\r\nconst CollectionPage = ({collection}) => {\r\n    const {title, items} = collection;\r\n    return(\r\n    <div className=\"collection-page\">\r\n        <h2 className='title'>{title}</h2>\r\n        <div className='items'>\r\n            {\r\n                items.map(item => <CollectionItem key={item.id} item={item}/>)\r\n            }\r\n        </div>\r\n    </div>\r\n)};\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    collection: selectCollection(ownProps.match.params.collectionId)(state)\r\n});\r\n\r\nexport default connect(mapStateToProps)(CollectionPage);","import {connect} from \"react-redux\";\r\nimport {createStructuredSelector} from \"reselect\";\r\nimport {compose} from \"redux\";\r\n\r\nimport CollectionPage from \"./collection.comp\";\r\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\r\nimport {selectIsCollectionsLoaded} from \"../../redux/shop/shop.selectors\";\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    isLoading: state => !selectIsCollectionsLoaded(state)\r\n});\r\n\r\nconst CollectionPageContainer = compose(\r\n    connect(mapStateToProps),\r\n    WithSpinner\r\n)(CollectionPage);\r\n\r\n\r\nexport default CollectionPageContainer;","import {createSelector} from \"reselect\";\r\n\r\nconst selectShop = state => state.shop;\r\n\r\nexport const selectShopCollections = createSelector(\r\n    [selectShop],\r\n    shop => shop.collections\r\n);\r\n\r\nexport const selectShopCollectionsForPreview = createSelector(\r\n    [selectShopCollections],\r\n    collections => collections ? Object.keys(collections).map(key => collections[key]): []\r\n);\r\n\r\nexport const selectCollection = collectionUrlParam => createSelector(\r\n    [selectShopCollections],\r\n    collections => collections ? collections[collectionUrlParam] : null\r\n);\r\n\r\nexport const selectIsFetching = createSelector(\r\n    [selectShop],\r\n    shop => shop.isFetching\r\n);\r\n\r\nexport const selectIsCollectionsLoaded = createSelector(\r\n    [selectShop],\r\n    shop => !!shop.collections\r\n);\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {addItem} from \"../../redux/cart/cart.action\";\r\nimport CustomButton from \"../custom-button/custombutton.component\";\r\nimport './collection-item.styles.scss';\r\n\r\nconst CollectionItem = ({item, addItem}) => {\r\n    const {imageUrl, price, name} = item;\r\n    return(\r\n\r\n        <div className='collection-item'>\r\n            <div style={{backgroundImage:`url(${imageUrl})`}} className=\"image\"/>\r\n            <div className=\"collection-footer\">\r\n                <span className='name'>{name}</span>\r\n                <span className='price'>${price}</span>\r\n            </div>\r\n            <CustomButton onClick={() => addItem(item)} inverted>Add to Cart</CustomButton>\r\n        </div>\r\n\r\n)};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    addItem: item => dispatch(addItem(item))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(CollectionItem);"],"sourceRoot":""}