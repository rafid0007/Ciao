{"version":3,"sources":["components/checkout-item/checkout-item.comp.jsx","components/stripe-button/stripe-button.component.jsx","pages/checkout/checkout.comp.jsx"],"names":["connect","dispatch","clearItem","item","removeItem","addItem","cartItem","name","imageUrl","price","quantity","className","src","alt","onClick","StripeCheckoutButton","priceForStripe","label","billingAddress","shippingAddress","image","description","amount","panelLabel","token","axios","url","method","data","then","response","alert","catch","error","console","log","stripeKey","mapStateToProps","createStructuredSelector","cartItems","selectCartItems","priceTotal","selectCartItemsPriceTotal","map","key","id"],"mappings":"+NA+BeA,G,OAAAA,YAAQ,MANI,SAAAC,GAAQ,MAAK,CACpCC,UAAW,SAAAC,GAAI,OAAIF,EAASC,YAAUC,KACtCC,WAAY,SAAAD,GAAI,OAAIF,EAASG,YAAWD,KACxCE,QAAS,SAAAF,GAAI,OAAIF,EAASI,YAAQF,QAGvBH,EAxBM,SAAC,GAAgD,IAA/CM,EAA8C,EAA9CA,SAAUJ,EAAoC,EAApCA,UAAWG,EAAyB,EAAzBA,QAASD,EAAgB,EAAhBA,WAC1CG,EAAmCD,EAAnCC,KAAMC,EAA6BF,EAA7BE,SAAUC,EAAmBH,EAAnBG,MAAOC,EAAYJ,EAAZI,SAC9B,OACA,yBAAKC,UAAU,iBACX,yBAAKA,UAAU,mBACX,yBAAKC,IAAKJ,EAAUK,IAAI,UAE5B,0BAAMF,UAAU,QAAQJ,GACxB,0BAAMI,UAAU,YACZ,yBAAKA,UAAU,QAAQG,QAAS,kBAAMV,EAAWE,KAAjD,UACA,0BAAMK,UAAU,SAASD,GACzB,yBAAKC,UAAU,QAAQG,QAAS,kBAAMT,EAAQC,KAA9C,WAEJ,0BAAMK,UAAU,SAAhB,IAA0BF,GAC1B,yBAAKE,UAAU,gBAAgBG,QAAS,kBAAMZ,EAAUI,KAAxD,e,oCCuBOS,EAxCc,SAAC,GAAe,IAAbN,EAAY,EAAZA,MACxBO,EAAyB,IAARP,EAuBvB,OACE,kBAAC,IAAD,CACEQ,MAAM,UACNV,KAAK,qBACLW,gBAAc,EACdC,iBAAe,EACfC,MAAM,iCACNC,YAAW,yBAAoBZ,GAC/Ba,OAAQN,EACRO,WAAW,UACXC,MA9BY,SAAAA,GACdC,IAAM,CACJC,IAAK,UACLC,OAAQ,OACRC,KAAM,CACJN,OAAQN,EACRQ,MAAOA,KAGRK,MAAK,SAAAC,GACJC,MAAM,wBAEPC,OAAM,SAAAC,GACLC,QAAQC,IAAI,kBAAmBF,GAC/BF,MACE,gGAgBJK,UAjCmB,iHC2CnBC,G,OAAkBC,YAAyB,CAC7CC,UAAWC,IACXC,WAAYC,OAGD1C,sBAAQqC,EAAiB,KAAzBrC,EA5CE,SAAC,GAAD,IAAEuC,EAAF,EAAEA,UAAWE,EAAb,EAAaA,WAAb,OACb,yBAAK9B,UAAU,iBACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,gBACX,0CAEJ,yBAAKA,UAAU,gBACX,8CAEJ,yBAAKA,UAAU,gBACX,2CAEJ,yBAAKA,UAAU,gBACX,wCAEJ,yBAAKA,UAAU,gBACX,0CAKJ4B,EAAUI,KAAI,SAAArC,GAAQ,OAClB,kBAAC,EAAD,CAAcsC,IAAKtC,EAASuC,GAAIvC,SAAUA,OAIlD,yBAAKK,UAAU,SAAf,WACa8B,GAEb,yBAAK9B,UAAU,gBAAf,iDAEI,6BAFJ,8CAKA,kBAAC,EAAD,CAAcF,MAAOgC","file":"static/js/8.250d8bc5.chunk.js","sourcesContent":["import React from 'react';\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {clearItem, removeItem, addItem} from \"../../redux/cart/cart.action\";\r\n\r\nimport './checkout-item.styles.scss';\r\n\r\nconst CheckoutItem = ({cartItem, clearItem, addItem, removeItem}) => {\r\n    const {name, imageUrl, price, quantity} = cartItem;\r\n    return (\r\n    <div className=\"checkout-item\">\r\n        <div className=\"image-container\">\r\n            <img src={imageUrl} alt=\"item\"/>\r\n        </div>\r\n        <span className='name'>{name}</span>\r\n        <span className='quantity'>\r\n            <div className='arrow' onClick={() => removeItem(cartItem)}>&#10094;</div>\r\n            <span className='value'>{quantity}</span>\r\n            <div className='arrow' onClick={() => addItem(cartItem)}>&#10095;</div>\r\n        </span>\r\n        <span className='price'>${price}</span>\r\n        <div className=\"remove-button\" onClick={() => clearItem(cartItem)}>&#10005;</div>\r\n    </div>\r\n)};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    clearItem: item => dispatch(clearItem(item)),\r\n    removeItem: item => dispatch(removeItem(item)),\r\n    addItem: item => dispatch(addItem(item))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(CheckoutItem);","import React from 'react';\r\nimport StripeCheckout from 'react-stripe-checkout';\r\nimport axios from 'axios';\r\n\r\nconst StripeCheckoutButton = ({ price }) => {\r\n  const priceForStripe = price * 100;\r\n  const publishableKey = 'pk_test_51HhUUlB933XkaPWn3lc2AUcAtNZmiIgkdy94JG87KRpEnO7Vw5QrGVF06jCCrQxcP7ZonLQPUYHHZYsaVpHTsiJk00WIR5r9bn';\r\n\r\n  const onToken = token => {\r\n    axios({\r\n      url: 'payment',\r\n      method: 'post',\r\n      data: {\r\n        amount: priceForStripe,\r\n        token: token\r\n      }\r\n    })\r\n      .then(response => {\r\n        alert('succesful payment');\r\n      })\r\n      .catch(error => {\r\n        console.log('Payment Error: ', error);\r\n        alert(\r\n          'There was an issue with your payment! Please make sure you use the provided credit card.'\r\n        );\r\n      });\r\n  };\r\n\r\n  return (\r\n    <StripeCheckout\r\n      label='Pay Now'\r\n      name='CRWN Clothing Ltd.'\r\n      billingAddress\r\n      shippingAddress\r\n      image='https://svgshare.com/i/CUz.svg'\r\n      description={`Your total is $${price}`}\r\n      amount={priceForStripe}\r\n      panelLabel='Pay Now'\r\n      token={onToken}\r\n      stripeKey={publishableKey}\r\n    />\r\n  );\r\n};\r\n\r\nexport default StripeCheckoutButton;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {createStructuredSelector} from \"reselect\";\r\n\r\nimport {selectCartItems, selectCartItemsPriceTotal} from \"../../redux/cart/cart.selectors\";\r\nimport CheckoutItem from \"../../components/checkout-item/checkout-item.comp\";\r\nimport StripeButton from \"../../components/stripe-button/stripe-button.component\";\r\n\r\nimport './checkout.styles.scss';\r\n\r\nconst Checkout = ({cartItems, priceTotal}) => (\r\n    <div className=\"checkout-page\">\r\n        <div className=\"checkout-header\">\r\n            <div className=\"header-block\">\r\n                <span>Product</span>\r\n            </div>\r\n            <div className=\"header-block\">\r\n                <span>Description</span>\r\n            </div>\r\n            <div className=\"header-block\">\r\n                <span>Quantity</span>\r\n            </div>\r\n            <div className=\"header-block\">\r\n                <span>Price</span>\r\n            </div>\r\n            <div className=\"header-block\">\r\n                <span>Remove</span>\r\n            </div>\r\n        </div>\r\n\r\n        {\r\n            cartItems.map(cartItem =>\r\n                <CheckoutItem key={cartItem.id} cartItem={cartItem}/>\r\n            )\r\n        }\r\n\r\n        <div className=\"total\">\r\n            TOTAL: ${priceTotal}\r\n        </div>\r\n        <div className=\"test-warning\">\r\n            *Please use the test credit card for payments*\r\n            <br/>\r\n            5555 5555 5555 4444 - EXP: 01/23 - CVC:123\r\n        </div>\r\n        <StripeButton price={priceTotal}/>\r\n\r\n    </div>\r\n);\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    cartItems: selectCartItems,\r\n    priceTotal: selectCartItemsPriceTotal\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(Checkout);"],"sourceRoot":""}