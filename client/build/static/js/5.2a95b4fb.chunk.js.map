{"version":3,"sources":["components/form-input/form-input.component.jsx","components/sign-in/sign-in.component.jsx","components/sign-up/sign-up.component.jsx","pages/sign-in-up/sign-in-up.component.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"names":["FormInput","handleChange","label","otherProps","className","onChange","value","length","connect","dispatch","googleSignInStart","emailSignInStart","emailAndPassword","useState","email","password","userCredentials","setUserCredentials","handleSubmit","event","a","preventDefault","target","name","onSubmit","type","required","onClick","isGoogleSignIn","signUpStart","displayName","confirmPassword","e","alert","SignInUp","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","unsupportedIterableToArray","TypeError"],"mappings":"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","file":"static/js/5.2a95b4fb.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./form-input.styles.scss\";\n\nfunction FormInput({ handleChange, label, ...otherProps }) {\n  return (\n    <div className=\"group\">\n      <input className=\"form-input\" {...otherProps} onChange={handleChange} />\n      {label ? <label className={`${otherProps.value.length ? 'shrink' : ''} form-input-label`}>{label}</label> : null}\n    </div>\n  );\n}\n\nexport default FormInput;\n","import React, {useState} from 'react';\r\nimport {connect} from \"react-redux\";\r\n\r\nimport FormInput from \"../form-input/form-input.component\";\r\nimport CustomButton from \"../custom-button/custombutton.component\";\r\n// import {auth} from \"../../firebase/firebase.utils\";\r\nimport {googleSignInStart, emailSignInStart} from \"../../redux/user/user.action\";\r\n\r\nimport './sign-in.styles.scss';\r\n\r\nconst SignIn = ({googleSignInStart, emailSignInStart}) => {\r\n    const [userCredentials, setUserCredentials] = useState({email:'', password: ''});\r\n\r\n    const {email, password} = userCredentials;\r\n\r\n    const handleSubmit = async event => {\r\n        event.preventDefault();\r\n        emailSignInStart({email, password});\r\n        setUserCredentials({...userCredentials, email:'', password:''});\r\n    };\r\n\r\n    const handleChange = event => {\r\n        const {name, value} = event.target;\r\n        setUserCredentials({...userCredentials, [name]: value});\r\n        // console.log(this.state.email,this.state.password);\r\n    };\r\n        return (\r\n            <div className='sign-in'>\r\n                <h2 className='title'>I already have an account</h2>\r\n                <span>Sign in with your email and password</span>\r\n\r\n                <form onSubmit={handleSubmit}>\r\n                    <FormInput label='Email' type=\"email\" name='email' value={email} required handleChange={handleChange}/>\r\n                    <FormInput label='Password' type=\"password\" name='password' value={password} required handleChange={handleChange}/>\r\n                    <div className=\"buttons\">\r\n                        <CustomButton type=\"submit\">\r\n                            Sign in\r\n                        </CustomButton>\r\n                        <CustomButton type=\"button\" onClick={googleSignInStart} isGoogleSignIn>Sign in with Google</CustomButton>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    googleSignInStart: () => dispatch(googleSignInStart()),\r\n    emailSignInStart: emailAndPassword => dispatch(emailSignInStart(emailAndPassword))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);","import React, {useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport FormInput from \"../form-input/form-input.component\";\r\nimport CustomButton from \"../custom-button/custombutton.component\";\r\n\r\nimport './sign-up.styles.scss';\r\nimport {signUpStart} from \"../../redux/user/user.action\";\r\n\r\nconst SignUP = ({signUpStart}) => {\r\n\r\n    const [userCredentials, setUserCredentials] = useState({\r\n            displayName: '',\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: ''\r\n        });\r\n\r\n    const handleChange = e => {\r\n      const {name ,value} = e.target;\r\n      setUserCredentials({...userCredentials, [name]:value});\r\n    };\r\n\r\n    const {displayName, email, password, confirmPassword} = userCredentials;\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        if (password !== confirmPassword) {\r\n            alert(\"passwords don't match\");\r\n            return;\r\n        }\r\n\r\n        signUpStart({displayName, email, password});\r\n    };\r\n\r\n        return (\r\n            <div className='sign-up'>\r\n                <h2 className='title'>I do not have an account</h2>\r\n                <span>Sign up with your email and password</span>\r\n                <form className='sign-up-form' onSubmit={handleSubmit}>\r\n                    <FormInput\r\n                        type='text'\r\n                        name = 'displayName'\r\n                        value = {displayName}\r\n                        handleChange = {handleChange}\r\n                        label= 'Display Name'\r\n                        required\r\n                    />\r\n                    <FormInput\r\n                        type='email'\r\n                        name = 'email'\r\n                        value = {email}\r\n                        handleChange = {handleChange}\r\n                        label= 'Email'\r\n                        required\r\n                    />\r\n                    <FormInput\r\n                        type='password'\r\n                        name = 'password'\r\n                        value = {password}\r\n                        handleChange = {handleChange}\r\n                        label= 'Password'\r\n                        required\r\n                    />\r\n                    <FormInput\r\n                        type='password'\r\n                        name = 'confirmPassword'\r\n                        value = {confirmPassword}\r\n                        handleChange = {handleChange}\r\n                        label= 'Confirm Password'\r\n                        required\r\n                    />\r\n                    <CustomButton type='submit'>SIGN UP</CustomButton>\r\n                </form>\r\n            </div>\r\n        )\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(SignUP);","import React from 'react';\r\nimport './sign-in-up.scss';\r\nimport SignIn from \"../../components/sign-in/sign-in.component\";\r\nimport SignUP from \"../../components/sign-up/sign-up.component\";\r\n\r\nconst SignInUp = () => (\r\n\r\n        <div className='sign-in-up'>\r\n            <SignIn/>\r\n            <SignUP/>\r\n        </div>\r\n);\r\n\r\nexport default SignInUp;","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}