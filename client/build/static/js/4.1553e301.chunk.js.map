{"version":3,"sources":["components/with-spinner/with-spinner.component.jsx","components/collection-preview/collection-preview.component.jsx","components/collections-overview/collections-overview.comp.jsx","components/collections-overview/collections-overview.container.jsx","redux/shop/shop.selectors.js","components/collection-item/collection-item.component.jsx"],"names":["WithSpinner","WrappedComponent","isLoading","otherProps","withRouter","items","title","routeName","history","match","className","onClick","push","path","toUpperCase","filter","item","index","map","key","id","mapStateToProps","createStructuredSelector","collections","selectShopCollectionsForPreview","connect","otherCollectionProp","state","selectIsCollectionsLoaded","CollectionsOverviewContainer","compose","CollectionsOverview","selectShop","shop","selectShopCollections","createSelector","Object","keys","selectCollection","collectionUrlParam","isFetching","dispatch","addItem","imageUrl","price","name","style","backgroundImage","inverted"],"mappings":"kLAUeA,IAPK,SAAAC,GAAgB,OAAI,gBAAEC,EAAF,EAAEA,UAAcC,EAAhB,oCACpCD,EACI,kBAAC,IAAD,MAEA,kBAACD,EAAqBE,M,gKCmBfC,G,OAAAA,aAjBW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAOC,EAAjB,EAAiBA,UAAWC,EAA5B,EAA4BA,QAASC,EAArC,EAAqCA,MAArC,OAGxB,yBAAKC,UAAU,sBACb,wBAAIA,UAAU,QAAQC,QAAS,kBAAMH,EAAQI,KAAR,UAAgBH,EAAMI,KAAtB,YAA8BN,MAAeD,EAAMQ,eACxF,yBAAKJ,UAAU,WACZL,EACEU,QAAO,SAACC,EAAMC,GAAP,OAAiBA,EAAQ,KAChCC,KAAI,SAACF,GAAD,OACH,kBAAC,IAAD,CAAgBG,IAAKH,EAAKI,GAAIJ,KAAMA,aCDxCK,G,OAAkBC,YAAyB,CAC/CC,YAAaC,OAGAC,cAAQJ,EAARI,EAZa,SAAC,GAAD,IAAGF,EAAH,EAAGA,YAAH,OACxB,yBAAKb,UAAU,wBACZa,EAAYL,KAAI,gBAAEE,EAAF,EAAEA,GAAOM,EAAT,6BACb,kBAAC,EAAD,eAAmBP,IAAKC,GAAQM,W,SCJpCL,EAAkBC,YAAyB,CAC7CpB,UAAW,SAAAyB,GAAK,OAAKC,YAA0BD,MAG7CE,EAA+BC,YACjCL,YAAQJ,GACRrB,IAFiC8B,CAGnCC,GAGaF,a,gCClBf,kHAEMG,EAAa,SAAAL,GAAK,OAAIA,EAAMM,MAErBC,EAAwBC,YACjC,CAACH,IACD,SAAAC,GAAI,OAAIA,EAAKV,eAGJC,EAAkCW,YAC3C,CAACD,IACD,SAAAX,GAAW,OAAIA,EAAca,OAAOC,KAAKd,GAAaL,KAAI,SAAAC,GAAG,OAAII,EAAYJ,MAAO,MAG3EmB,EAAmB,SAAAC,GAAkB,OAAIJ,YAClD,CAACD,IACD,SAAAX,GAAW,OAAIA,EAAcA,EAAYgB,GAAsB,SAQtDX,GALmBO,YAC5B,CAACH,IACD,SAAAC,GAAI,OAAIA,EAAKO,cAGwBL,YACrC,CAACH,IACD,SAAAC,GAAI,QAAMA,EAAKV,iB,gCC1BnB,mDAyBeE,gBAAQ,MAJI,SAAAgB,GAAQ,MAAK,CACpCC,QAAS,SAAA1B,GAAI,OAAIyB,EAASC,YAAQ1B,QAGvBS,EAnBQ,SAAC,GAAqB,IAApBT,EAAmB,EAAnBA,KAAM0B,EAAa,EAAbA,QACpBC,EAAyB3B,EAAzB2B,SAAUC,EAAe5B,EAAf4B,MAAOC,EAAQ7B,EAAR6B,KACxB,OAEI,yBAAKnC,UAAU,mBACX,yBAAKoC,MAAO,CAACC,gBAAgB,OAAD,OAAQJ,EAAR,MAAsBjC,UAAU,UAC5D,yBAAKA,UAAU,qBACX,0BAAMA,UAAU,QAAQmC,GACxB,0BAAMnC,UAAU,SAAhB,IAA0BkC,IAE9B,kBAAC,IAAD,CAAcjC,QAAS,kBAAM+B,EAAQ1B,IAAOgC,UAAQ,GAApD","file":"static/js/4.1553e301.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Spinner from \"../spinner/spinner.component\";\r\n\r\nconst WithSpinner = WrappedComponent => ({isLoading, ...otherProps}) => (\r\n    isLoading ?\r\n        <Spinner/>\r\n        :\r\n        <WrappedComponent {...otherProps}/>\r\n);\r\n\r\nexport default WithSpinner;","import React from \"react\";\nimport { withRouter } from 'react-router-dom';\n\n\nimport CollectionItem from \"../collection-item/collection-item.component\";\n\nimport \"./collection-preview.styles.scss\";\n\n\nconst CollectionPreview = ({ items, title, routeName, history, match }) => (\n\n\n  <div className=\"collection-preview\">\n    <h1 className=\"title\" onClick={() => history.push(`${match.path}/${routeName}`)}>{title.toUpperCase()}</h1>\n    <div className=\"preview\">\n      {items\n        .filter((item, index) => index < 4)\n        .map((item) => (\n          <CollectionItem key={item.id} item={item}/>\n        ))}\n    </div>\n  </div>\n\n\n);\n\nexport default withRouter(CollectionPreview);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\n\nimport { selectShopCollectionsForPreview } from \"../../redux/shop/shop.selectors\";\nimport CollectionPreview from \"../collection-preview/collection-preview.component\";\n\nimport \"./collections-overview.styles.scss\";\n\nconst CollectionsOverview = ({ collections }) => (\n    <div className=\"collections-overview\">\n      {collections.map(({id, ...otherCollectionProp}) => (\n          <CollectionPreview key={id} {...otherCollectionProp} />\n      ))}\n    </div>\n);\n\nconst mapStateToProps = createStructuredSelector({\n  collections: selectShopCollectionsForPreview,\n});\n\nexport default connect(mapStateToProps)(CollectionsOverview);","import {connect} from \"react-redux\";\r\nimport {createStructuredSelector} from \"reselect\";\r\nimport {compose} from \"redux\";\r\n\r\nimport CollectionsOverview from \"./collections-overview.comp\";\r\nimport WithSpinner from \"../with-spinner/with-spinner.component\";\r\nimport {selectIsCollectionsLoaded} from \"../../redux/shop/shop.selectors\";\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    isLoading: state => !selectIsCollectionsLoaded(state)\r\n});\r\n\r\nconst CollectionsOverviewContainer = compose(\r\n    connect(mapStateToProps),\r\n    WithSpinner\r\n)(CollectionsOverview);\r\n\r\n\r\nexport default CollectionsOverviewContainer;","import {createSelector} from \"reselect\";\r\n\r\nconst selectShop = state => state.shop;\r\n\r\nexport const selectShopCollections = createSelector(\r\n    [selectShop],\r\n    shop => shop.collections\r\n);\r\n\r\nexport const selectShopCollectionsForPreview = createSelector(\r\n    [selectShopCollections],\r\n    collections => collections ? Object.keys(collections).map(key => collections[key]): []\r\n);\r\n\r\nexport const selectCollection = collectionUrlParam => createSelector(\r\n    [selectShopCollections],\r\n    collections => collections ? collections[collectionUrlParam] : null\r\n);\r\n\r\nexport const selectIsFetching = createSelector(\r\n    [selectShop],\r\n    shop => shop.isFetching\r\n);\r\n\r\nexport const selectIsCollectionsLoaded = createSelector(\r\n    [selectShop],\r\n    shop => !!shop.collections\r\n);\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {addItem} from \"../../redux/cart/cart.action\";\r\nimport CustomButton from \"../custom-button/custombutton.component\";\r\nimport './collection-item.styles.scss';\r\n\r\nconst CollectionItem = ({item, addItem}) => {\r\n    const {imageUrl, price, name} = item;\r\n    return(\r\n\r\n        <div className='collection-item'>\r\n            <div style={{backgroundImage:`url(${imageUrl})`}} className=\"image\"/>\r\n            <div className=\"collection-footer\">\r\n                <span className='name'>{name}</span>\r\n                <span className='price'>${price}</span>\r\n            </div>\r\n            <CustomButton onClick={() => addItem(item)} inverted>Add to Cart</CustomButton>\r\n        </div>\r\n\r\n)};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    addItem: item => dispatch(addItem(item))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(CollectionItem);"],"sourceRoot":""}