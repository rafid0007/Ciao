{"version":3,"sources":["collection-item.styles.scss","collection.styles.scss"],"names":[],"mappings":"AAAA,iBACE,UAAW,CACX,YAAa,CACb,qBAAsB,CACtB,YAAa,CACb,kBAAmB,CACnB,iBAAkB,CANpB,wBASI,UAAW,CACX,UAAW,CACX,qBAAsB,CAEtB,kBAAmB,CAbvB,oCAiBI,UAAW,CACX,UAAW,CACX,YAAa,CACb,qBAAsB,CACtB,kBAAmB,CACnB,cAAe,CACf,eAAgB,CAChB,wBAAyB,CAxB7B,gCA4BI,SAAU,CACV,iBAAkB,CAClB,SAAU,CACV,YAAa,CAEb,yBAjCJ,gCAkCM,aAAc,CACd,UAAY,CACZ,eAAgB,CAChB,cAAe,CAElB,CAvCH,sCA2CM,aAAc,CACd,WAAY,CA5ClB,8BA+CM,UAAW,CACZ,yBAhDL,oEA4DQ,aAAc,CACf,CC7DP,iBACE,YAAa,CACb,qBAAsB,CAFxB,wBAKI,YAAa,CACb,kBAAmB,CACnB,cAAe,CACf,WAAY,CACZ,iDAAuD,CACvD,cAAe,CACf,kBAAkB,CAClB,wBAAyB,CAZ7B,wBAgBI,cAAe,CACf,YAAa,CACb,yDAA4D,CAE5D,aAAc,CACd,yBArBJ,wBAsBM,aAAc,CAMjB,CA5BH,yCA0BM,kBAAmB","file":"6.072836a5.chunk.css","sourcesContent":[".collection-item {\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 350px;\r\n  align-items: center;\r\n  position: relative;\r\n\r\n  .image {\r\n    width: 100%;\r\n    height: 95%;\r\n    background-size: cover;\r\n    //background-position: center;\r\n    margin-bottom: 15px;\r\n  }\r\n\r\n  .collection-footer {\r\n    width: 100%;\r\n    height: 15%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    font-size: 14px;\r\n    font-weight: 500;\r\n    text-transform: uppercase;\r\n  }\r\n\r\n  .custom-button{\r\n    width: 80%;\r\n    position: absolute;\r\n    top: 200px;\r\n    display: none;\r\n\r\n    @media (max-width: 768px) {\r\n      display: block;\r\n      opacity: 0.9;\r\n      min-width: unset;\r\n      padding: 0 10px;\r\n    }\r\n  }\r\n\r\n  &:hover {\r\n    .custom-button{\r\n      display: block;\r\n      opacity: .85;\r\n    }\r\n    .image{\r\n      opacity: .8;\r\n    }\r\n\r\n  }\r\n  @media (max-width: 768px) {\r\n\r\n    &:hover {\r\n      .custom-button {\r\n        //display: block;\r\n        opacity: unset;\r\n      }\r\n\r\n      .image {\r\n        opacity: unset;\r\n      }\r\n    }\r\n}\r\n}\r\n\r\n\r\n//const express = require(\"express\");\r\n//const app = express();\r\n//// This is your real test secret API key.\r\n//const stripe = require(\"stripe\")(\"sk_test_51HhUUlB933XkaPWneVv5HaiY5wLliTat8mDvkQcUQ6r0UDoJkst5Y50GmhoDLDPf7P60KzdZ7skCUj07uxLeUF9600gi92yyaT\");\r\n//\r\n//app.use(express.static(\".\"));\r\n//app.use(express.json());\r\n//\r\n//const calculateOrderAmount = items => {\r\n//  // Replace this constant with a calculation of the order's amount\r\n//  // Calculate the order total on the server to prevent\r\n//  // people from directly manipulating the amount on the client\r\n//  return 1400;\r\n//};\r\n//\r\n//app.post(\"/create-payment-intent\", async (req, res) => {\r\n//  const { items } = req.body;\r\n//  // Create a PaymentIntent with the order amount and currency\r\n//  const paymentIntent = await stripe.paymentIntents.create({\r\n//    amount: calculateOrderAmount(items),\r\n//    currency: \"usd\"\r\n//  });\r\n//\r\n//  res.send({\r\n//    clientSecret: paymentIntent.client_secret\r\n//  });\r\n//});\r\n//\r\n//app.listen(4242, () => console.log('Node server listening on port 4242!'));\r\n",".collection-page {\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  .title {\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 0 30px;\r\n    height: 20vh;\r\n    background-image: linear-gradient(to right, #fff, #000);\r\n    font-size: 38px;\r\n    margin-bottom:50px;\r\n    text-transform: uppercase;\r\n  }\r\n\r\n  .items {\r\n    padding: 0 50px;\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\r\n    //grid-template-columns: repeat(4, 1fr);\r\n    grid-gap: 30px;\r\n    @media (max-width: 600px) {\r\n      grid-gap: 15px;\r\n    }\r\n\r\n    & .collection-item {\r\n      margin-bottom: 30px;\r\n    }\r\n  }\r\n}\r\n"]}